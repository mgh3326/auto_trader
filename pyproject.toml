[project]
name = "auto-trader"
version = "0.1.0"
description = ""
authors = [
    { name = "robin", email = "robin@watcha.com" }
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "pytz (>=2025.2,<2026.0)",
    "apscheduler (>=3.11.0,<4.0.0)",
    "pandas (>=2.3.0,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "ta (>=0.11.0,<0.12.0)",
    "yfinance (>=0.2.65,<0.3.0)",
    "dart-fss (>=0.4.13,<0.5.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "sqlalchemy[asyncio] (>=2.0.43,<3.0.0)",
    "base (>=0.0.0,<0.0.1)",
    "alembic (>=1.16.4,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "redis (>=6.4.0,<6.5.0)",
]

[tool.poetry]
packages = [{ include = "app" }]

[tool.poetry.group.test.dependencies]
pytest = ">=7.4.0,<8.0.0"
pytest-asyncio = ">=0.21.0,<1.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
pytest-mock = ">=3.11.0,<4.0.0"
fakeredis = ">=2.0.0,<3.0.0"
aiosqlite = ">=0.19.0,<1.0.0"

[tool.poetry.group.dev.dependencies]
black = ">=23.0.0,<24.0.0"
flake8 = ">=6.0.0,<7.0.0"
isort = ">=5.12.0,<6.0.0"
mypy = ">=1.5.0,<2.0.0"
bandit = ">=1.7.0,<2.0.0"
safety = ">=2.3.0,<3.0.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/alembic/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
