name: Debug Docker Build

on:
  workflow_dispatch:  # 수동 실행
    inputs:
      dockerfile:
        description: 'Dockerfile to test'
        required: true
        default: './Dockerfile.api'
        type: choice
        options:
          - './Dockerfile.api'
          - './Dockerfile.ws'

jobs:
  debug-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug - Check files
        run: |
          echo "=== Repository Contents ==="
          find . -name "Dockerfile*" -type f
          echo ""
          echo "=== Target Dockerfile Content ==="
          cat ${{ github.event.inputs.dockerfile }}
          echo ""
          echo "=== Poetry/Requirements Files ==="
          ls -la pyproject.toml poetry.lock 2>/dev/null || echo "Poetry files not found"
          ls -la requirements*.txt 2>/dev/null || echo "Requirements files not found"
          echo ""
          echo "=== Project Structure ==="
          tree -L 3 . || ls -la

      - name: Test Docker build (dry-run)
        run: |
          echo "Testing Docker build for: ${{ github.event.inputs.dockerfile }}"
          docker buildx build \
            --dry-run \
            --progress=plain \
            --file ${{ github.event.inputs.dockerfile }} \
            .

      - name: Test Docker build (actual)
        run: |
          echo "Building Docker image..."
          docker buildx build \
            --load \
            --progress=plain \
            --file ${{ github.event.inputs.dockerfile }} \
            --tag test-image:latest \
            .

      - name: Test container run
        run: |
          echo "Testing container startup..."
          docker run --rm test-image:latest python --version || echo "Container run failed"
