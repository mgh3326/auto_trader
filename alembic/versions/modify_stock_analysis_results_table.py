"""modify stock_analysis_results table to link with stock_info

Revision ID: modify_stock_analysis_results_table
Revises: create_stock_info_table
Create Date: 2025-01-22 11:01:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'modify_stock_analysis'
down_revision = 'stock_analysis_table'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. stock_info_id 컬럼 추가
    op.add_column('stock_analysis_results', sa.Column('stock_info_id', sa.Integer(), nullable=True))
    
    # 2. 기존 데이터를 stock_info 테이블로 마이그레이션
    op.execute("""
        INSERT INTO stock_info (symbol, name, instrument_type, is_active, created_at, updated_at)
        SELECT DISTINCT symbol, name, instrument_type, true, MIN(created_at), MAX(updated_at)
        FROM stock_analysis_results
        GROUP BY symbol, name, instrument_type
        ON CONFLICT (symbol) DO NOTHING
    """)
    
    # 3. stock_info_id 업데이트
    op.execute("""
        UPDATE stock_analysis_results 
        SET stock_info_id = si.id
        FROM stock_info si
        WHERE stock_analysis_results.symbol = si.symbol
    """)
    
    # 4. stock_info_id를 NOT NULL로 변경
    op.alter_column('stock_analysis_results', 'stock_info_id', nullable=False)
    
    # 5. 외래키 제약조건 추가
    op.create_foreign_key(
        'fk_stock_analysis_results_stock_info_id', 
        'stock_analysis_results', 'stock_info', ['stock_info_id'], ['id']
    )
    
    # 6. 기존 컬럼들 제거 (symbol, name, instrument_type)
    op.drop_column('stock_analysis_results', 'symbol')
    op.drop_column('stock_analysis_results', 'name')
    op.drop_column('stock_analysis_results', 'instrument_type')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 기존 컬럼들 복원
    op.add_column('stock_analysis_results', sa.Column('symbol', sa.String(length=50), nullable=True))
    op.add_column('stock_analysis_results', sa.Column('name', sa.String(length=100), nullable=True))
    op.add_column('stock_analysis_results', sa.Column('instrument_type', sa.String(length=50), nullable=True))
    
    # 2. stock_info에서 데이터 복원
    op.execute("""
        UPDATE stock_analysis_results 
        SET 
            symbol = si.symbol,
            name = si.name,
            instrument_type = si.instrument_type
        FROM stock_info si
        WHERE stock_analysis_results.stock_info_id = si.id
    """)
    
    # 3. 외래키 제약조건 제거
    op.drop_constraint('fk_stock_analysis_results_stock_info_id', 'stock_analysis_results', type_='foreignkey')
    
    # 4. stock_info_id 컬럼 제거
    op.drop_column('stock_analysis_results', 'stock_info_id')
    
    # ### end Alembic commands ###